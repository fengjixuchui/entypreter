#!/bin/bash

# 
#            --------------------------------------------------
#                               ProtonScript               
#            --------------------------------------------------
#          Copyright (C) <2015>  <Entynetproject (Ivan Nikolsky)>
#
#        This program is free software: you can redistribute it and/or modify
#        it under the terms of the GNU General Public License as published by
#        the Free Software Foundation, either version 3 of the License, or
#        any later version.
#
#        This program is distributed in the hope that it will be useful,
#        but WITHOUT ANY WARRANTY; without even the implied warranty of
#        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#        GNU General Public License for more details.
#
#        You should have received a copy of the GNU General Public License
#        along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#
#    About Author :   
#    Founder   : Entynetproject (Ivan Nikolsky)
#    Site      : http://entynetproject.simplesite.com/
#    Instagram : @entynetproject 
#    Twitter   : @entynetproject
#    Email     : entynetproject@gmail.com
#

G="\033[1m"
R="\033[1m"
E="\033[0m"

if [[ -d /data/data/com.termux ]]
then
pspath="/data/data/com.termux/files/usr/bin/proton"
else
pspath="/usr/local/bin/proton"
fi

if [[ -f $pspath ]]
then
sleep 0
else
RS="\033[1;31m"
WS="\033[0;97m"
CE="\033[0m"
echo -e ""$RS"[-]"$WS" Proton Framework is not installed!"$CE""
exit
fi

if [[ $1 = "-h" || $1 = "--help" ]]
then
  echo -e """usage: pscript [-h] [-v] [-n] [-u] [--no-output OPTION] 
                                   [-e FILE] [-d FILE]
                                   
optional arguments:
  -h, --help            show this help message and exit
  -v, --version         Display ProtonScript version.
  -n, --notepad         Open the ProtonScript notepad.
  -u, --update          Update the ProtonScript.
  --no--output OPTION   
                        Disable output for an option.
  -e FILE, --encode FILE
                        Encode a ProtonScript program.
  -d FILE, --decode FILE 
                        Decode a ProtonScript program."""
			exit
                        
fi

#blue start 
	BS="-e \033[1;34m"
#color end
	CE="\033[0m"
#red start
	RS="\033[31m"
#green start
	GNS="-e \033[1;32m"
#white start
  WHS="\033[0;97m"

if [[ "$1" = "-u" || "$1" = "--update" ]]
then
if [[ -d /data/data/com.termux ]]
then
if [[ -f /data/data/com.termux/files/usr/bin/pscript ]]
then
UPD="true"
else
UPD="false"
fi
else
if [[ -f /usr/local/bin/pscript ]]
then
UPD="true"
else
UPD="false"
fi
fi
{
ASESR="$( curl -s checkip.dyndns.org | sed -e 's/.*Current IP Address: //' -e 's/<.*$//' )"
} &> /dev/null
if [[ "$ASESR" = "" ]]
then 
sleep 1
echo -e "\n(1/1) Updating ProtonScript ..... [ "$R"FAIL"$E" ]\n"
exit
fi
if [[ $EUID -ne 0 ]]
then
sleep 1
echo -e "\n(1/1) Updating ProtonScript ..... [ "$R"FAIL"$E" ]\n"
exit
fi
{
rm /bin/pscript
rm /usr/local/bin/pscript
rm /data/data/com.termux/files/usr/bin/pscript
rm /bin/psenv
rm /usr/local/bin/psenv
rm /data/data/com.termux/files/usr/bin/psenv
rm /usr/share/nano/pscript.nanorc
rm /usr/local/share/nano/pscript.nanorc
} &> /dev/null
if [[ -f ~/proton/script/pscript ]]
then
sleep 1
echo -e "\n(1/1) Updating ProtonScript ..... [ "$G"OK"$E" ]"
else
sleep 1
echo -e "\n(1/1) Updating ProtonScript ..... [ "$R"FAIL"$E" ]\n"
exit
fi
sleep 5
{
cd ~
mkdir .pscript
cd ~/.pscript
git clone https://github.com/entynetproject/proton.git
rm -r ~/proton/script
cp -r ~/.pscript/proton/script ~/proton
if [[ "$UPD" != "true" ]]
then
sleep 0
else
cd ~/proton/script
cp pscript /usr/local/bin
chmod +x /usr/local/bin/pscript
cp pscript /bin
chmod +x /bin/pscript
cp pscript /data/data/com.termux/files/usr/bin
chmod +x /data/data/com.termux/files/usr/bin/pscript
cd ~/proton/script/psenv
cp psenv /usr/local/bin
chmod +x /usr/local/bin/psenv
cp psenv /bin
chmod +x /bin/psenv
cp psenv /data/data/com.termux/files/usr/bin
chmod +x /data/data/com.termux/files/usr/bin/psenv
cd ~/proton/script/nanorc
cp pscript.nanorc /usr/local/share/nano
cp pscript.nanorc /usr/share/nano
fi
rm -r ~/.pscript
} &> /dev/null
echo -e ""
exit
fi

if [[ $1 = "-v" || $1 = "--version" ]]
then
echo -e "ProtonScript v3.0 stable"
exit
fi

if [[ $1 = "--no-output" ]]
then

if [[ $2 = "" ]]
then
echo -e "usage: pscript [-h] [-v] [-n] [-u] [--no-output OPTION]"
echo -e "                                   [-e FILE] [-d FILE]"
echo -e "pscript: error: argument --no-output: expected one argument"
exit
fi

if [[ "$2" = "-u" || "$2" = "--update" ]]
then
{
if [[ -d /data/data/com.termux ]]
then
if [[ -f /data/data/com.termux/files/usr/bin/pscript ]]
then
UPD="true"
else
UPD="false"
fi
else
if [[ -f /usr/local/bin/pscript ]]
then
UPD="true"
else
UPD="false"
fi
fi
{
ASESR="$( curl -s checkip.dyndns.org | sed -e 's/.*Current IP Address: //' -e 's/<.*$//' )"
} &> /dev/null
if [[ "$ASESR" = "" ]]
then 
sleep 1
echo -e "\n(1/1) Updating ProtonScript ..... [ "$R"FAIL"$E" ]\n"
exit
fi
if [[ $EUID -ne 0 ]]
then
sleep 1
echo -e "\n(1/1) Updating ProtonScript ..... [ "$R"FAIL"$E" ]\n"
exit
fi
{
rm /bin/pscript
rm /usr/local/bin/pscript
rm /data/data/com.termux/files/usr/bin/pscript
rm /bin/psenv
rm /usr/local/bin/psenv
rm /data/data/com.termux/files/usr/bin/psenv
rm /usr/share/nano/pscript.nanorc
rm /usr/local/share/nano/pscript.nanorc
} &> /dev/null
if [[ -f ~/proton/script/pscript ]]
then
sleep 1
echo -e "\n(1/1) Updating ProtonScript ..... [ "$G"OK"$E" ]"
else
sleep 1
echo -e "\n(1/1) Updating ProtonScript ..... [ "$R"FAIL"$E" ]\n"
exit
fi
sleep 5
{
cd ~
mkdir .pscript
cd ~/.pscript
git clone https://github.com/entynetproject/proton.git
rm -r ~/proton/script
cp -r ~/.pscript/proton/script ~/proton
if [[ "$UPD" != "true" ]]
then
sleep 0
else
cd ~/proton/script
cp pscript /usr/local/bin
chmod +x /usr/local/bin/pscript
cp pscript /bin
chmod +x /bin/pscript
cp pscript /data/data/com.termux/files/usr/bin
chmod +x /data/data/com.termux/files/usr/bin/pscript
cd ~/proton/script/env
cp psenv /usr/local/bin
chmod +x /usr/local/bin/psenv
cp psenv /bin
chmod +x /bin/psenv
cp psenv /data/data/com.termux/files/usr/bin
chmod +x /data/data/com.termux/files/usr/bin/psenv
cd ~/proton/script/nanorc
cp pscript.nanorc /usr/local/share/nano
cp pscript.nanorc /usr/share/nano
fi
rm -r ~/.pscript
} &> /dev/null
echo -e ""
exit
} &> /dev/null
fi

if [[ $2 = "-n" || $2 = "--notepad" ]] 
then
{
cd ~/proton/script/notepad
python notepad.py
} &> /dev/null
exit
fi

if [[ $2 = "-h" || $2 = "--help" ]]
then
exit
fi

if [[ $2 = "-v" || $2 = "--version" ]]
then
exit
fi

if [[ $2 = "-e" || $1 = "--encode" ]]
then
if [[ $3 = "" ]]
then
echo -e "usage: pscript [-h] [-v] [-n] [-u] [--no-output OPTION]"
echo -e "                                   [-e FILE] [-d FILE]"
echo -e "pscript: error: argument -e/--encode: expected one argument"
exit
fi
{
  python3 ~/proton/script/coder/coder.py -e $3
  } &> /dev/null
  exit
fi

if [[ $2 = "-d" || $1 = "--decode" ]]
then
if [[ $3 = "" ]]
then
echo -e "usage: pscript [-h] [-v] [-n] [-u] [--no-output OPTION]"
echo -e "                                   [-e FILE] [-d FILE]"
echo -e "pscript: error: argument -d/--decode: expected one argument"
exit
fi
{
  python3 ~/proton/script/coder/coder.py -d $3
  } &> /dev/null
  exit
fi

elif [[ $1 = "-e" || $1 = "--encode" ]]
then
if [[ $2 = "" ]]
then
echo -e "usage: pscript [-h] [-v] [-n] [-u] [--no-output OPTION]"
echo -e "                                   [-e FILE] [-d FILE]"
echo -e "pscript: error: argument -e/--encode: expected one argument"
exit
fi
  python3 ~/proton/script/coder/coder.py -e $2
  exit

elif [[ $1 = "-d" || $1 = "--decode" ]]
then
if [[ $2 = "" ]]
then
echo -e "usage: pscript [-h] [-v] [-n] [-u] [--no-output OPTION]"
echo -e "                                   [-e FILE] [-d FILE]"
echo -e "pscript: error: argument -d/--decode: expected one argument"
exit
fi
  python3 ~/proton/script/coder/coder.py -d $2
  exit
  
elif [[ $1 = "-n" || $1 = "--notepad" ]] 
then
cd ~/proton/script/notepad
python notepad.py
exit
fi

if [[ $1 != "" ]]
then
echo -e "usage: pscript [-h] [-v] [-n] [-u] [--no-output OPTION]"
echo -e "                                   [-e FILE] [-d FILE]"
echo -e "pscript: error: unrecognized arguments: "$1""
else
  echo -e """usage: pscript [-h] [-v] [-n] [-u] [--no-output OPTION] 
                                   [-e FILE] [-d FILE]
                                   
optional arguments:
  -h, --help            show this help message and exit
  -v, --version         Display ProtonScript version.
  -n, --notepad         Open the ProtonScript notepad.
  -u, --update          Update the ProtonScript.
  --no--output OPTION   
                        Disable ProtonScript output.
  -e FILE, --encode FILE
                        Encode a ProtonScript program.
  -d FILE, --decode FILE 
                        Decode a ProtonScript program."""
			exit
fi
